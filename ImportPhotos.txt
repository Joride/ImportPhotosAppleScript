(*
Created to be able to import a lot of photos quickly into Photos.
This is script is specific to the way the author has organized his 
fotofiles on disk: it will import foto(and video files not .asf) into
folders and projects just like on the filesystem.
On the filesystem the organization is like this:
../<year>/<nn - monthname>/nn - <eventname>, e.g.
../1999/04 - April/30 - Queensday

When the script starts, the user needs to select a folder. Select the folder
containing the years (in then example above that would be the non-existing
folder '..').

Joride, May 23, 2016
*)


set importFolder to choose folderset validYearNames to "" as listrepeat with aNumber from 1900 to 2100	set aNumberAsText to aNumber as text	set end of validYearNames to aNumberAsTextend repeatset validMonthNames to [¬	"01 - Januari", ¬	"02 - Februari", ¬	"03 - Maart", ¬	"04 - April", ¬	"05 - Mei", ¬	"06 - Juni", ¬	"07 - Juli", ¬	"08 - Augustus", ¬	"09 - September", ¬	"10 - Oktober", ¬	"11 - November", ¬	"12 - December"]set missingFotoFiles to "" as list-- check that the folder contains only valid subfolderswith timeout of 360000 seconds -- 100 hours	tell application "Finder"		set yearFolders to every folder of importFolder		repeat with aYearFolder in yearFolders			set yearFolderName to (name of aYearFolder) as text		end repeat	end tell		tell application "Finder"		set yearFolders to every folder of importFolder				repeat with aYearFolder in yearFolders			set yearFolderName to (name of aYearFolder) as text			log "Processing " & yearFolderName						if validYearNames does not contain yearFolderName then				set errorMessage to "Wrong yearfolder: " & yearFolderName				display alert errorMessage message "Aborting"			else				set monthFolders to every folder of aYearFolder				repeat with aMontFolder in monthFolders					set monthFolderName to (name of aMontFolder) as text					log "	Processing " & monthFolderName										if validMonthNames does not contain monthFolderName then						set errorMessage to "Wrong monthFolder: " & monthFolderName						display alert errorMessage message "Aborting"						return					end if										set eventFolders to every folder of aMontFolder					repeat with anEventFolder in eventFolders						set eventFolderName to (name of anEventFolder) as text						log "		Processing " & eventFolderName												set fotoFiles to (every file of anEventFolder whose name extension is not in ["asf", "ASF"]) as alias list						if (count of fotoFiles) is greater than 0 then							tell application "Photos"																-- create yearfolder if necessary								if not (exists folder named (yearFolderName)) then									set newYearFolder to make new folder named yearFolderName								else									set newYearFolder to folder named yearFolderName								end if																-- create monthFolder in yearFolder if necessary								if not (exists folder (monthFolderName) of newYearFolder) then									set newMonthFolder to make new folder at newYearFolder named monthFolderName								else									set newMonthFolder to folder named monthFolderName of newYearFolder								end if																-- create eventFolder in monthFolder if necessary								if not (exists album eventFolderName of newMonthFolder) then									-- it did not yet exist, create it and import all files into it									set newEventAlbum to make new album at newMonthFolder named eventFolderName									import fotoFiles into newEventAlbum skip check duplicates yes								else									-- the event already exists, iterate over all files and check									-- if one already exists in the album. If not, import it.									set newEventAlbum to album eventFolderName of newMonthFolder																		repeat with fotoFile in fotoFiles										tell application "Finder"											set fotoFileName to name of (fotoFile as alias)										end tell																				set mediaItemNames to filename of every media item in newEventAlbum										if not (mediaItemNames contains fotoFileName) then											-- import it											set missingFile to yearFolderName & "	" & monthFolderName & "	" & eventFolderName & "	" & fotoFileName & "
"											set end of missingFotoFiles to missingFile as string											import (fotoFile as alias) into newEventAlbum skip check duplicates yes										end if																			end repeat																										end if															end tell						end if											end repeat									end repeat							end if		end repeat	end tell	log "These are the file that were missing:"	log missingFotoFiles	log "Import Photos script ended without errors"end timeout